library(readxl)
library(lubridate)
setwd("D:\\Dropbox\\My projects\\Elections\\Legacies\\data\\politicians\\merge\\process")
merge99 <- read_excel("merged_1999.xlsx")
names(merge99) <- c("partyName","IndexID","Name","Surname","DistrictName","majDistrict","BYR","DYR","MYR","Profession","Empl","PartyID")
merge99 <- merge99 %>%
filter(!is.na(majDistrict))%>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=interval(ymd("1999-10-01"), dob_numeric))
merge99 <- merge99 %>%
filter(!is.na(majDistrict))%>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=interval(ymd("1999-10-01"), dob_numeric),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric))
merge99 <- merge99 %>%
filter(!is.na(majDistrict))%>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=interval(ymd("1999-10-01"), dob_numeric),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric))
rm()
rm(ls())
rm(merge99)
merge99 <- merge99 %>%
filter(!is.na(majDistrict))%>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=interval(ymd("1999-10-01"), dob_numeric),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric))
library(tidyverse)
library(readxl)
library(lubridate)
setwd("D:\\Dropbox\\My projects\\Elections\\Legacies\\data\\politicians\\merge\\process")
merge99 <- read_excel("merged_1999.xlsx")
names(merge99) <- c("partyName","IndexID","Name","Surname","DistrictName","majDistrict","BYR","DYR","MYR","Profession","Empl","PartyID")
merge99 <- merge99 %>%
filter(!is.na(majDistrict))%>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=interval(ymd("1999-10-01"), dob_numeric),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric))
merge99$age1 <- as.interval(merge99$age, "year")
View(merge99)
merge99$age1 <- time_length(merge99$age, "year")
View(merge99)
rm(merge99)
merge99 <- read_excel("merged_1999.xlsx")
names(merge99) <- c("partyName","IndexID","Name","Surname","DistrictName","majDistrict","BYR","DYR","MYR","Profession","Empl","PartyID")
merge99 <- merge99 %>%
filter(!is.na(majDistrict))%>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=time_length(interval(dob_numeric, ymd("1999-10-01")), "year"),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric))
table(merge99$Name)
a <- as.data.frame(table(merge99$Name))
write_dta(a, "a.dta")
haven::write_dta(a, "a.dta")
gender <- read_csv("gender.csv")
gender <- read.csv("gender.csv", sep = "\t", stringsAsFactors = FALSE)
merge99 <- read_excel("merged_1999.xlsx")
names(merge99) <- c("partyName","IndexID","Name","Surname","DistrictName","majDistrict","BYR","DYR","MYR","Profession","Empl","PartyID")
gender <- read.csv("gender.csv", sep = "\t", stringsAsFactors = FALSE)
merge99 <- merge99 %>%
filter(!is.na(majDistrict))%>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=time_length(interval(dob_numeric, ymd("1999-10-01")), "year"),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric)) %>%
left_join(gender, "Name")
View(gender)
gender <- read.csv("gender.csv", sep = "\t", stringsAsFactors = FALSE, encoding = "UTF9-8")
View(gender)
table(gender$Name)
gender <- read_csv("gender.csv")
merge99 <- read_excel("merged_1999.xlsx")
names(merge99) <- c("partyName","IndexID","Name","Surname","DistrictName","majDistrict","BYR","DYR","MYR","Profession","Empl","PartyID")
gender <- read_csv("gender.csv")
merge99 <- merge99 %>%
filter(!is.na(majDistrict))%>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=time_length(interval(dob_numeric, ymd("1999-10-01")), "year"),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric)) %>%
left_join(gender, by="Name")
haven::write_dta(merge99, "merge99.dta")
merge99 <- read_excel("merged_1999.xlsx")
names(merge99) <- c("partyName","IndexID","Name","Surname","DistrictName","majDistrict","BYR","DYR","MYR","Profession","Empl","PartyID")
gender <- read_csv("gender.csv")
merge99 <- merge99 %>%
mutate(majDistrict=gsub("[^0-9\\.]", "", majDistrict),
dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=time_length(interval(dob_numeric, ymd("1999-10-01")), "year"),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric)) %>%
filter(!is.na(majDistrict))%>%
left_join(gender, by="Name")
nrow(merge99)
merge99 <- read_excel("merged_1999.xlsx")
merge99$majDistrict=gsub("[^0-9\\.]", "", merge99$majDistrict)
merge99$majDistrict <- gsub("[^0-9\\.]", "", merge99$majDistrict)
names(merge99) <- c("partyName","IndexID","Name","Surname","DistrictName","majDistrict","BYR","DYR","MYR","Profession","Empl","PartyID")
merge99$majDistrict <- gsub("[^0-9\\.]", "", merge99$majDistrict)
table(merge99$majDistrict)
View(merge99)
addmargins(table(merge99$majDistrict))
setwd("D:\\Dropbox\\My projects\\Elections\\Legacies\\data\\politicians\\merge\\process")
merge99 <- read_excel("merged_1999.xlsx")
names(merge99) <- c("partyName","IndexID","Name","Surname","DistrictName","majDistrict","BYR","DYR","MYR","Profession","Empl","PartyID")
gender <- read_csv("gender.csv")
merge99 <- merge99 %>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=time_length(interval(dob_numeric, ymd("1999-10-01")), "year"),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric)) %>%
filter(!is.na(majDistrict))%>%
left_join(gender, by="Name")
setwd("D:\\Dropbox\\My projects\\Elections\\Legacies\\data\\politicians\\merge\\process")
merge99 <- read_excel("merged_1999.xlsx")
names(merge99) <- c("partyName","IndexID","Name","Surname","DistrictName","majDistrict","BYR","DYR","MYR","Profession","Empl","PartyID")
gender <- read_csv("gender.csv")
merge99 <- merge99 %>%
mutate(dob_numeric=paste0(BYR, "-", MYR, "-",  DYR),
dob_numeric=as.Date(ymd(dob_numeric)),
year=1999,
age=time_length(interval(dob_numeric, ymd("1999-10-01")), "year"),
nameSurname=paste0(Name, Surname),
UID=paste0(nameSurname, dob_numeric)) %>%
filter(!is.na(majDistrict))%>%
left_join(gender, by="Name")
View(merge99)
haven::write_dta(merge99, "merge99.dta")
data(gapminder)
library(ggplot2)
library(tidyverse)
data(gapminder)
install.packages("gapminder")
library(gapminder)
data(gapminder)
head(gapminder)
ggplot(gapminder,
aes(x = gdpPercap,
y=lifeExp))+
geom_point(aes(color=continent))+
geom_smooth()+
scale_x_log10()
ggplot(gapminder,
aes(x = gdpPercap,
y=lifeExp))+
geom_point(aes(color=continent))+
geom_smooth()+
scale_x_log10()
ggplot(gapminder,
aes(x = gdpPercap,
y=lifeExp))+
geom_point(aes(color=pop))+
geom_smooth()+
scale_x_log10()
ggplot(gapminder,
aes(x = gdpPercap,
y=lifeExp))+
geom_point(aes(color=pop))+
geom_smooth()+
scale_x_log10()
ggsave("gapminder_plot.png", device="png", height=5)
p <- ggplot(data = gapminder, mapping = aes(x = year, y = gdpPercap))
p + geom_line(color="gray70", aes(group = country)) +
geom_smooth(size = 1.1, method = "loess", se = FALSE) +
scale_y_log10(labels=scales::dollar) +
facet_wrap(~ continent, ncol = 5) +
labs(x = "Year",
y = "GDP per capita",
title = "GDP per capita on Five Continents")
ndi <- haven::read_dta("data/NDI_2018_Jun_16.07.18_Public.dta")
setwd("D:\\Dropbox\\My projects\\Courses\\R_LADIES\\viz\\Oct_21_2018")
ndi <- haven::read_dta("data/NDI_2018_Jun_16.07.18_Public.dta")
table(ndi$PARTYSUPP1)
party <- ndi %>%
mutate(party = case_when(
PARTYSUPP1 == 8 ~ 1,
PARTYSUPP1 == 6 ~ 2,
PARTYSUPP1 == 7 ~ 3,
PARTYSUPP1 == -1 ~ 5,
PARTYSUPP1 == -2 ~ 6,
PARTYSUPP1 == 25 ~ 7,
TRUE ~ 4
) %>%
count(., party, wt = INDWT) %>%
mutate(n/sum(n))
party
party <- ndi %>%
mutate(party = case_when(
PARTYSUPP1 == 8 ~ 1,
PARTYSUPP1 == 6 ~ 2,
PARTYSUPP1 == 7 ~ 3,
PARTYSUPP1 == -1 ~ 5,
PARTYSUPP1 == -2 ~ 6,
PARTYSUPP1 == 25 ~ 7,
TRUE ~ 4
)) %>%
count(., party, wt = INDWT) %>%
mutate(n/sum(n))
names(ndi)
party <- ndi %>%
mutate(party = case_when(
PARTYSUPP1 == 8 ~ 1,
PARTYSUPP1 == 6 ~ 2,
PARTYSUPP1 == 7 ~ 3,
PARTYSUPP1 == -1 ~ 5,
PARTYSUPP1 == -2 ~ 6,
PARTYSUPP1 == 25 ~ 7,
TRUE ~ 4
)) %>%
count(., party, wt = WTIND) %>%
mutate(n/sum(n))
party
names(party) <- c("party", "frequency", "proportion")
party$party <- factor(party$party, levels=c(1, 2, 3, 4, 5, 6, 7),
labels=c("GD", "UNM", "MLEG", "Other",
"DK", "RA", "None"))
ggplot(party, aes(party, proportion))+
geom_bar(aes(stat="identity"))
ggplot(party, aes(party, proportion))+
geom_bar(stat="identity")
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?")+
theme_bw()
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?")+
theme_bw()+
theme(legend.position = none)
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?")+
theme_bw()+
theme(legend.position = "none")
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#e31a1c", "#1f78b4", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(guides= FALSE, values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(guides= FALSE, values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?")+
theme_bw()+
theme(legend.position = "none")
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?")+
theme_bw()+
theme(legend.position = "none")
names(ndi)
party.settype <- ndi %>%
mutate(party = case_when(
PARTYSUPP1 == 8 ~ 1,
PARTYSUPP1 == 6 ~ 2,
PARTYSUPP1 == 7 ~ 3,
PARTYSUPP1 == -1 ~ 5,
PARTYSUPP1 == -2 ~ 6,
PARTYSUPP1 == 25 ~ 7,
TRUE ~ 4
)) %>%
group_by(SETTYPE)%>%
count(., party, wt = WTIND) %>%
mutate(n/sum(n))
party.settype
table(ndi$SETTYPE)
party.settype$party <- factor(party.settype$party, levels=c(1, 2, 3, 4, 5, 6, 7),
labels=c("ოცნება", "ენმ", "ესმთ", "სხვა",
"არ ვიცი", "უარი", "სხვა"))
party.settype$settlement <- factor(party.settype$settlement, levels=c(1, 2, 3, 4),
labels=c("თბილისი", "დიდი ქალაქი", "პატარა ქალაქი", "სოფელი"))
names(party.settype) <- c("party", "settlement",  "frequency", "proportion")
party.settype$settlement <- factor(party.settype$settlement, levels=c(1, 2, 3, 4),
labels=c("თბილისი", "დიდი ქალაქი", "პატარა ქალაქი", "სოფელი"))
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?",
subtitle="დასახლებული პუნქტის ტიპის მიხედვით")+
theme_bw()+
theme(legend.position = "none")+
facet_grid(~settype)
ggplot(party, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?",
subtitle="დასახლებული პუნქტის ტიპის მიხედვით")+
theme_bw()+
theme(legend.position = "none")+
facet_grid(~settlement)
ggplot(party.settype, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?",
subtitle="დასახლებული პუნქტის ტიპის მიხედვით")+
theme_bw()+
theme(legend.position = "none")+
facet_grid(~settlement)
party.settype
party.settype <- ndi %>%
mutate(party = case_when(
PARTYSUPP1 == 8 ~ 1,
PARTYSUPP1 == 6 ~ 2,
PARTYSUPP1 == 7 ~ 3,
PARTYSUPP1 == -1 ~ 5,
PARTYSUPP1 == -2 ~ 6,
PARTYSUPP1 == 25 ~ 7,
TRUE ~ 4
)) %>%
group_by(SETTYPE)%>%
count(., party, wt = WTIND) %>%
mutate(n/sum(n))
names(party.settype) <- c("party", "settlement",  "frequency", "proportion")
party.settype$party <- factor(party.settype$party, levels=c(1, 2, 3, 4, 5, 6, 7),
labels=c("ოცნება", "ენმ", "ესმთ", "სხვა",
"არ ვიცი", "უარი", "სხვა"))
party.settype$settlement <- factor(party.settype$settlement, levels=c(1, 2, 3, 4),
labels=c("თბილისი", "დიდი ქალაქი", "პატარა ქალაქი", "სოფელი"))
ggplot(party.settype, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?",
subtitle="დასახლებული პუნქტის ტიპის მიხედვით")+
theme_bw()+
theme(legend.position = "none")+
facet_grid(~settlement)
table(ndi$SETTYPE)
table(ndi$STRATUM)
party.settype <- ndi %>%
mutate(party = case_when(
PARTYSUPP1 == 8 ~ 1,
PARTYSUPP1 == 6 ~ 2,
PARTYSUPP1 == 7 ~ 3,
PARTYSUPP1 == -1 ~ 5,
PARTYSUPP1 == -2 ~ 6,
PARTYSUPP1 == 25 ~ 7,
TRUE ~ 4
)) %>%
group_by(STRATUM)%>%
count(., party, wt = WTIND) %>%
mutate(n/sum(n))
names(party.settype) <- c("party", "settlement",  "frequency", "proportion")
party.settype$party <- factor(party.settype$party, levels=c(1, 2, 3, 4, 5, 6, 7),
labels=c("ოცნება", "ენმ", "ესმთ", "სხვა",
"არ ვიცი", "უარი", "სხვა"))
party.settype$settlement <- factor(party.settype$settlement, levels=c(1, 2, 3, 4, 5),
labels=c("თბილისი", "დიდი ქალაქი", "პატარა ქალაქი", "სოფელი", "ეთნ. უმცირესობები"))
ggplot(party.settype, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?",
subtitle="დასახლებული პუნქტის ტიპის მიხედვით")+
theme_bw()+
theme(legend.position = "none")+
facet_grid(~settlement)
View(party.settype)
party.settype
table(ndi$STRATUM, ndi$PARTYSUPP1)
party.settype <- ndi %>%
mutate(party = case_when(
PARTYSUPP1 == 8 ~ 1,
PARTYSUPP1 == 6 ~ 2,
PARTYSUPP1 == 7 ~ 3,
PARTYSUPP1 == -1 ~ 5,
PARTYSUPP1 == -2 ~ 6,
PARTYSUPP1 == 25 ~ 7,
PARTYSUPP1 < -2 ~ NA_real_,
TRUE ~ 4
)) %>%
group_by(STRATUM)%>%
count(., party, wt = WTIND) %>%
mutate(n/sum(n))
names(party.settype) <- c("party", "settlement",  "frequency", "proportion")
party.settype
names(party.settype) <- c("settlement",  "party", "frequency", "proportion")
party.settype$party <- factor(party.settype$party, levels=c(1, 2, 3, 4, 5, 6, 7),
labels=c("ოცნება", "ენმ", "ესმთ", "სხვა",
"არ ვიცი", "უარი", "სხვა"))
party.settype$settlement <- factor(party.settype$settlement, levels=c(1, 2, 3, 4, 5),
labels=c("თბილისი", "დიდი ქალაქი", "პატარა ქალაქი", "სოფელი", "ეთნ. უმცირესობები"))
ggplot(party.settype, aes(party, proportion))+
geom_bar(aes(fill=party),stat="identity")+
scale_fill_manual(values=c("#1f78b4", "#e31a1c", "#a6cee3", "#b2df8a", "#444444", "#999999", "#fb9a99"))+
ylim(0, 1)+
labs(title="რომელი პარტია დგას თქვენს შეხედულებებთან ყველაზე ახლოს?",
subtitle="დასახლებული პუნქტის ტიპის მიხედვით")+
theme_bw()+
theme(legend.position = "none")+
facet_grid(~settlement)
p <- ggplot(gapminder)
p
p
head(gapminder)
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point()
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point()+
geom_smooth()
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point()+
geom_smooth(method="lm")
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point()+
geom_smooth(method="lm")+
scale_x_log10()
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point()+
geom_smooth()+
scale_x_log10()
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(color=continent))+
geom_smooth()+
scale_x_log10()
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(color=continent))+
geom_smooth()+
scale_x_log10()
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(shape=continent))+
geom_smooth()+
scale_x_log10()
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp, group=continent))+
geom_point(aes(color=continent))+
geom_smooth()+
scale_x_log10()
p
p <- ggplot(data = gapminder,
mapping = aes(x = year,
y = gdpPercap))
p +
geom_line(color="gray70", aes(group = country)) +
geom_smooth(size = 1.1, method = "loess",
se = FALSE) +
scale_y_log10(labels=scales::dollar) +
facet_wrap(~ continent, ncol = 5) +
labs(x = "Year",
y = "GDP per capita",
title = "GDP per capita on Five Continents")
p
