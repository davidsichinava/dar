<div class="header" style="margin-top:0 px;font-size:60%;">რმაRგ: მეორე შეხვედრა</div>

რაოდენობრივ მონაცემთა ანალიზი R-გარემოში
========================================================
author: დავით სიჭინავა
date: 16 მარტი, 2018
autosize: true
transition: none
css: css/style.css
font-family: 'BPG_upper'
<span style="font-weight:bold; font-family:BPG_upper;">მეორე შეხვედრა</span>


```{r}
```

დღევანდელი შეხვედრის გეგმა
========================================================
incremental: true


- R გარემო


მონაცემების წაკითხვა ჩაშენებული ფუნქციების მეშვეობით:
========================================================

```{r, eval=FALSE}

myTable<-read.table("data/myTable.txt")

myTable<-read.table("data/CB_2017_Georgia_public_17.11.17.csv", header = TRUE, sep=",") ### მძიმით გამოყოფილი ცხრილის წაკითხვა

myTable<-read.csv("data/CB_2017_Georgia_public_17.11.17.csv", header=TRUE) ### მძიმით გამოყოფილი ცხრილის წაკითხვა

myTable<-read.table("data/CB_2017_Georgia_public_17.11.17.txt", header = TRUE, sep="\t") ### ტაბით გამოყოფილი ცხრილის წაკითხვა

galton<-read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/HistData/Galton.csv")

```

მონაცემების წაკითხვა გარე ბიბლიოთეკების მეშვეობით:
========================================================

```{r, eval=FALSE}
install.packages("haven")
library(haven)

```

მონაცემების წაკითხვა გარე ბიბლიოთეკების მეშვეობით:
========================================================
```{r, eval=FALSE}
### haven ბიბლიოთეკა:

cb2017spss<-read_sav("data/CB_2017_Georgia_public_17.11.17.sav")
cb2017stata<-read_dta("data/CB_2017_Georgia_public_17.11.17.dta")

```

მონაცემების წაკითხვა გარე ბიბლიოთეკების მეშვეობით:
========================================================
```{r, eval=FALSE}
install.packages("foreign")
library(foreign)

cb2017foreign<-read.spss("data/CB_2017_Georgia_public_17.11.17.sav")


```

მონაცემთა ტიპები და ვექტორული ობიექტები:
========================================================

```{r, eval=FALSE}
eList<-c("მე პირველი ელემენტი ვარ", "მე მეორე ელემენტი ვარ", "მე მესამე ელემენტი ვარ")

eList[1] ### პირველი ელემენტი

eList[2] ### მეორე ელემენტი

eList[3] ### მესამე ელემენტი

```

ატომური ობიექტები:
========================================================
```{r, eval=FALSE}

logical<-c(TRUE, FALSE, T, F)
integer<-c(1L, 4L, 8L, 0L)
double<-c(1, 3.6, 90, 4)
characters<-c("a", "b", "სამი", "four")

```

სია:
========================================================
```{r, eval=FALSE}

simpleList<-list(TRUE, FALSE, T, F)
combiList<-list(c("a", "b"), c("იყო არაბეთს როსტევან"), c(1L, 4L, 8L, 0L), 98)
multidimList<-list(list(c("a", "b"), 7), c("რომელმან შექმნა სამყარო"))

```

ატრიბუტი:
========================================================

| __ატრიბუტი__ | __აღწერა__ |
|--------------|--------------------------------------------------------------------------------|
|	`class`		| ობიექტის ან მისი ელემენტის ტიპი|
|	`comment` 	| ობიექტის ტექსტური კომენტარი, მაგ. მისი აღწერა, დანიშნულება და ა.შ.|
|	`dim`		| განზომილებები, ანუ რიგების და სვეტების რაოდენობა|
|	`dimnames` | განზომილებების (ანუ რიგის და სვეტის) სახელებზე მიმართვა|
|	`names`	| ობიექტის სახელწოდება |
|	`row.names` | ცხრილური ტიპის ობიექტის რიგების სახელი |
|	`tsp`		| დროის მწკრივების ტიპის ობიექტის საწყისი, დასასრული დროები და მნიშვნელობა |
|	`levels`	| ფაქტორული ტიპის ობიექტების დონეები. მარტივად რომ ვთქვათ, მნიშვნელობის განსაზღვრებები, როგორიც SPSS და STATA-ს ცვლადებს გააჩნიათ |


ატრიბუტი:
========================================================
```{r, eval=FALSE}

attr(x, "Attribute") <- "ატრიბუტი"

attributes(x)

```

ატრიბუტი:
========================================================
```{r, eval=FALSE}
myObject<- c(10, 20, 30)
names(myObject) <- c("ასაკი", "სიმაღლე", "წონა")

```

ფაქტორი:
========================================================
```{r, eval=FALSE}

eyes<-factor(c(1, 2, 3, 4), levels=c("თაფლისფერი", "მწვანე", "ცისფერი", "ნაცრისფერი"))

```

მონაცემთა მასივი და მატრიცა
========================================================

<img src="img/bullets.gif" alt="Drawing" style="width: 600px; display: block; margin-left: auto; margin-right: auto; margin-top: 40px;"/>


მონაცემთა მასივი და მატრიცა
========================================================

```{r, eval=FALSE}
a<-c(1, 2)
b<-c(10, 20, 30, 40, 50, 60)

ab.array<-array(c(a, b), dim=c(3, 3, 2))
print(ab.array)

```


მონაცემთა მასივი და მატრიცა
========================================================

```{r, eval=FALSE}
a<-c(1, 2)
b<-c(10, 20, 30, 40, 50, 60)
column.name <-c("სვეტი1", "სვეტი2", "სვეტი3")
row.name <- c("სტრიქონი1", "სტრიქონი2", "სტრიქონი3")
matrix.name<- c("Thomas Anderson", "Neo")
ab.array <- array(c(a,b),dim = c(3,3,2),dimnames = list(row.name, column.name, matrix.name))
print(ab.array)

```


მონაცემთა მასივი და მატრიცა
========================================================
```{r, eval=FALSE}
my.matrix <- matrix(c(1:15), nrow=5)
print(my.matrix)

### შესაძლებელია მხოლოდ სვეტის მითითება:
my.matrix <- matrix(c(1:15), ncol=5)
print(my.matrix)

```


მონაცემთა მასივი და მატრიცა
========================================================

```{r, eval=FALSE}
col.names <- c("პირველი", "მეორე", "მესამე", "მეოთხე", "მეხუთე")
row.names <- c("სტრიქონი1", "სტრიქონი2", "სტრიქონი3")
my.matrix <- matrix(c(1:15), ncol=5, dimnames=list(row.names, col.names))
print(my.matrix)

```

მონაცემთა მასივი და მატრიცა
========================================================

```{r, eval=FALSE}
df <- data.frame(
   my.id = c (1:11), 
   region.name = c("Samegrelo-Zemo Svaneti","Racha-Lechkhumi-Kvemo Svaneti","Imereti","Guria","Adjara", "Samtskhe-Javakheti", "Shida Kartli", "Kvemo Kartli", "Mtskheta-Mtianeti", "Tbilisi", "Kakheti"),
   value.added = c(1807.4, NA, 2685.2, 584.4, 2039.7, 724.6, 1485.21, 2162.9, NA, 12147.1, 1459.1),
   stringsAsFactors = FALSE
	)
print(df)

```